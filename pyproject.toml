[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.25",
]

[project]
name = "kedro-dagster-example"
dynamic = ["version", "urls"]
authors = [
  { name = "Guillaume Tauzin", email = "gtauzin.github@pm.me" }
]
maintainers = [
  { name = "Guillaume Tauzin", email = "gtauzin.github@pm.me" }
]
description = "Kedro project for showcasing the `kedro-dagster` plugin."
readme.content-type = "text/markdown"
readme.file = "README.md"
requires-python = ">=3.10, <3.14"
dependencies = [
    "kedro==1.0.0",
    "kedro-datasets[pandas-csvdataset, pandas-exceldataset, pandas-parquetdataset, optuna-studydataset]>=7.0",
    "kedro-dagster",
    "kedro-mlflow>=0.14.3",
    "dagster==1.12.0",
    # Pinning dagster versions pins dagster integrations' versions too
    "dagster-mlflow",
    "scikit-learn>=1.5",
    "mlflow>=2.20",
    "optuna>=4.2",
    "optuna-integration>=4.2",
  "psycopg2-binary>=2.9",
]

[project.scripts]
"kedro-dagster-example" = "kedro_dagster_example.__main__:main"

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.build.targets.wheel]
packages = ["src/kedro_dagster_example"]

[dependency-groups]
dev = [
  { include-group = "docs" },
  { include-group = "tests" },
  { include-group = "viz" },
]
viz = [
  "kedro-viz>=6.7.0",
  "ipython>=8.10",
  "jupyterlab>=3.0",
  "notebook",
  "ipykernel",
]
docs = [
  "numpydoc>=1.8.0",
  "mkdocs-material>=9.5.47",
  "mkdocs-git-revision-date-localized-plugin>=1.3",
  "mkdocstrings>=0.27",
  "mike>=2.1",
]
fix = [
  "pre-commit-uv>=4.1.3",
]
tests = [
  "pytest>=8.3",
  "pytest-mock>=3.14",
]

[tool.uv.sources]
kedro-dagster = { git = "https://github.com/gtauzin/kedro-dagster.git", branch = "version_compat" }
kedro-datasets = { git = "https://github.com/kedro-org/kedro-plugins.git", branch = "main", subdirectory = "kedro-datasets" }

[tool.kedro]
project_name = "kedro-dagster-example"
package_name = "kedro_dagster_example"
kedro_init_version = "1.0.0"
source_dir = "src"

[tool.ruff]
line-length = 120
show-fixes = true

[tool.ruff.format]
preview = true
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
exclude = ["docs/**"]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore=[
    "E203", # space before : (needed for how black formats slicing)
    "E731", # do not assign a lambda expression, use a def
    "E741", # do not use variables named 'l', 'O', or 'I'
    "E501", # ruff format takes care of line-too-long
    "PLR0913", # too many args in func def
    "PLR0915", # too many statements
    "PLR0912", # too many branches
    "PLR2004", # magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
# It's fine not to put the import at the top of the file in the notebooks
# folder.
"notebooks/*"=["E402", "F821"]

[tool.kedro_telemetry]
project_id = "f6961915dfa1422aad723fd0b48ff401"
